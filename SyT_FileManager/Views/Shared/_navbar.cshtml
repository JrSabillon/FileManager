@model List<SyT_FileManager.Models.PrivilegioModel>
@using SyT_FileManager.AppCode;
@{ 
    string[] dropdownDividers = new string [] { "MODIII_ARMC", "MODIII_ENVARCINA", "MODIII_RCBD", "MODIV_ARMC", "MODIV_TRIT", "MODIV_RCBD" };
}

<div class="navbar navbar-expand-lg navbar-dark bg-enterprise shadow-sm">
    @Html.ActionLink("Inicio", "Index", "Home", null, new { @class = "navbar-brand" })
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-menu" aria-controls="navbar-menu" aria-expanded="false" aria-label="Desplegar menú">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbar-menu">
        <ul class="navbar-nav mr-auto">
            @foreach (var item in Model.Where(x => x.PrivNivelOrden.Equals("0")).OrderBy(x => x.PrivPosicion))
            {
                //Los nodos son todos aquellos que comienzan con el id del modulo, son de nivel 1 y tienen un controlador y una accion.
                //Si el nodo no tiene controlador entonces es un nodo de permiso.
                var childs = Model.Where(x => x.PrivId.StartsWith(item.PrivId + "_") && !x.PrivId.Equals(item.PrivId) && x.PrivNivelOrden.Equals("1") && !string.IsNullOrEmpty(x.PrivController))
                    .OrderBy(x => x.PrivPosicion).ToList();

                if (childs.Count > 0)
                {
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="submenu_@item.PrivId" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @item.PrivNombre
                        </a>
                        <div class="dropdown-menu" aria-labelledby="submenu_@item.PrivId">
                            @foreach (var child in childs)
                            {
                                @Html.ActionLink(child.PrivNombre, HttpUtility.UrlDecode(child.PrivAction), child.PrivController, null, new { @class = "dropdown-item" })
                                if (dropdownDividers.Any(x => x.Equals(child.PrivId)))
                                {
                                    <div class="dropdown-divider"></div>
                                }
                            }
                        </div>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        @Html.ActionLink(item.PrivNombre, item.PrivAction, item.PrivController, null, new { @class = "nav-link" })
                    </li>
                }
            }
        </ul>
        <div class="navbar-nav">
            <a class="nav-item nav-link" href="@Url.Action("Logout", "Nav")" id="navbarDropdown">
                [@Constants.GetUserData().UserId] Salir
                <i class="fa fa-sign-out"></i>
            </a>
        </div>
    </div>
</div>