@model List<SyT_FileManager.Models.DocumentoModel>
@{
    var labels = new SyT_FileManager.Models.DocumentoModel();
}

<div>
    @if (ViewBag.ActionType == "BoxPositioned")
    {
        <h5 class="text-center">Caja #@ViewBag.CajaInactivaID</h5>
        <hr />
    }
    @if (ViewBag.ActionType == "PositionBox")
    {
        <div class="alert alert-info">
            <label>Favor revisar el contenido de la caja antes de asignarla a un estante.</label>
        </div>
    }
    <div class="table-responsive">
        <table class="table table-hover table-bordered">
            <tr>
                <td>
                    Usuario envío: @ViewBag.UsuarioEntrego
                </td>
                <td>
                    Agencia envío: @ViewBag.AgenciaEnvia
                </td>
            </tr>
        </table>
    </div>
    <br />
    @if (ViewBag.ActionType == "PositionBox")
    {
        <button class="btn btn-success mb-3 float-right" data-toggle="modal" data-target="#modal-documento"><i class="fa fa-plus"></i> Agregar documento</button>

        <div class="modal fade" id="modal-documento" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modal-ubicacion-caja-title">Agregar documento</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" id="modal-body-documento">
                        <form id="form-document">
                            <input type="hidden" name="CajaID" id="new-CajaID" />
                            <div class="row">
                                <div class="col-12 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => labels.DocBancoID) *
                                        @Html.DropDownListFor(model => labels.DocBancoID, new SelectList(ViewBag.Bancos, "BancoID", "BancoNombre"), "Seleccione una opción", new { @class = "form-control col-12", required = "required", Name = "DocBancoID" })
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => labels.DocCCCCID) *
                                        <select name="DocCCCCID" id="DocCCCCID" class="form-control col-12" required>
                                            <option value="">Seleccione una opción</option>
                                            @foreach (SyT_FileManager.Models.EstructuraOrganizacionalModel item in ViewBag.CentrosDeCosto)
                                            {
                                                if (item.EstOrgaIDPadre == null)
                                                {
                                                    <option disabled>@item.EstOrgaNombre</option>
                                                }
                                                else
                                                {
                                                    <option value="@item.EstOrgaID">&nbsp;&nbsp; @item.EstOrgaNombre</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => labels.DocTipo) *
                                        @Html.DropDownListFor(model => labels.DocTipo, new SelectList(ViewBag.TiposDocumentos, "TipoDocID", "TipoDocNombre"), "Seleccione una opción", new { @class = "form-control col-12", required = "required", Name = "DocTipo" })
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => labels.DocFechaInfo) *
                                        @Html.TextBoxFor(model => labels.DocFechaInfo, new { @class = "form-control col-12", type = "date", required = "required", Name = "DocFechaInfo" })
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => labels.DocDescripcion) *
                                        @Html.TextAreaFor(model => labels.DocDescripcion, new { @class = "form-control col-12", rows = "3", required = "required", Name = "DocDescripcion" })
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 align-self-center">
                                    <div class="form-check">
                                        @Html.CheckBoxFor(model => labels.DocPaquete, new { @class = "form-check-input", Name = "DocPaquete", id = "DocPaquete" })
                                        @Html.LabelFor(model => labels.DocPaquete, new { @class = "form-check-label" })
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger" type="button" data-dismiss="modal"><i class="fa fa-times"></i> Cancelar</button>
                        <button class="btn btn-success" type="button" onclick="addDocument();"><i class="fa fa-plus"></i> Agregar</button>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Documento</th>
                    <th>Descripción</th>
                    <th>Estado</th>
                    <th>Fecha de registro</th>
                    <th>Fecha de vencimiento</th>
                    <th>Banco</th>
                    <th>Centro de costo</th>
                    <th>Agencia</th>
                    <th>Zona</th>
                    <th>Es paquete</th>
                    @if (ViewBag.ActionType == "PositionBox")
                    {
                        <th></th>
                    }
                </tr>
            </thead>
            <tbody id="tbody-documentos">
                @foreach (var item in Model)
                {
                    Html.RenderPartial("Partials/_DocumentGrid", item);
                }
            </tbody>
        </table>
    </div>

    @if (ViewBag.ActionType == "PositionBox")
    {
        <div class="row mt-3">
            <div class="col-12">
                <button type="button" class="btn btn-success mb-3" onclick="placeBox(@ViewBag.CajaID, @ViewBag.AlmacenID)"><i class="fa fa-map-marker"></i> Posicionar caja</button>
            </div>
        </div>
    }

    @if (ViewBag.ActionType == "BoxPositioned")
    {
        <hr />
        <div class="row">
            <div class="col align-self-center">
                <h5>Codigo de barra</h5>
            </div>
            <div class="col text-right">
                <button class="btn btn-enterprise">
                    <i class="fa fa-print"></i> <span class="d-none d-md-inline" onclick="printQRCode();">Imprimir</span>
                </button>
            </div>
        </div>
        <hr />
        <div id="div-barCode" class="text-center">
            <div style="width: 300px; margin: auto;">
                <label class="text-muted">Banco Hodureño del Café - BANHCAFE</label> <br />
                <label>@ViewBag.AlmacenNombre - @ViewBag.CajaInactivaID</label>
                <table class="table table-sm">
                    <tr>
                        <td>Periodo</td>
                        <td style="text-align:right;">@Model.Min(x => x.DocFechaInfo).Value.ToString("yyyy")</td>
                    </tr>
                    <tr>
                        <td>Fecha inicial</td>
                        <td style="text-align:right;">@Model.Min(x => x.DocFechaInfo).Value.ToString("yyyy-MM-dd")</td>
                    </tr>
                    <tr>
                        <td>Fecha final</td>
                        <td style="text-align:right;">@Model.Max(x => x.DocFechaInfo).Value.ToString("yyyy-MM-dd")</td>
                    </tr>
                </table>
                <svg id="barCode"></svg>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    $(function () {
        if ($('#barCode').get(0)) {
            JsBarcode("#barCode", `${@ViewBag.CajaID}, ${'@ViewBag.AlmacenID'}`, {
                width: 3,
                height: 40,
                fontSize: 12,
                displayValue: false
            });
        }

        if ($('#tbody-documentos').get(0)) {
            $('#tbody-documentos .btn-removeDoc').on('click', function () {
                var DocID = $(this).attr("data-DocID");
                var tr = $(this).closest('tr');

                if (confirm('¿Desea retirar este documento de la caja?')) {
                    $.post('@Url.Action("RemoveDocument", "ArchivoActivo")', { DocID: DocID }, function (result) {
                        if (result.Retired) {
                            tr.remove();
                        }
                    });
                }
            });
        }
    });

    function printQRCode() {
        var divContents = document.getElementById("div-barCode").innerHTML;
        var a = window.open('', '', 'height=500, width=500');
        a.document.write('<html>');
        a.document.write('<body>');
        a.document.write(divContents);
        a.document.write('</body></html>');
        a.document.close();
        a.print();
    }

    /**
     * Agregar documento a la caja a posicionar en caso de que no exista
     * */
    function addDocument() {
        const data = new FormData($('#form-document').get(0));
        var payload = Object.fromEntries(data.entries());
        payload.DocPaquete = $('#DocPaquete').is(':checked');

        $.post('@Url.Action("AddDocumentToBox", "ArchivoActivo")', payload, function (documento) {
            $('#form-document').trigger('reset');
            $('#modal-documento').modal('hide');
            $('#tbody-documentos').append(
                `<tr>
                    <td>${documento.Documento}</td>
                    <td>${documento.Descripcion}</td>
                    <td>${documento.Estado}</td>
                    <td>${documento.FechaRegistro}</td>
                    <td>${documento.FechaVencimiento}</td>
                    <td>${documento.Banco}</td>
                    <td>${documento.CentroCosto}</td>
                    <td>${documento.Agencia}</td>
                    <td>${documento.Zona}</td>
                    <td>${documento.Paquete}</td>
                    <td>
                        <button class="btn btn-sm btn-danger shadow" title="Quitar documento" type="button"><i class="fa fa-trash-o"></i></button>
                    </td>
                </tr>`
            );
        });
    }
</script>