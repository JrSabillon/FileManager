@model List<SyT_FileManager.Models.PrivilegioModel>

@{
    int position = 0;
}

@using (Html.BeginForm("_RolPrivilege", "Roles", FormMethod.Post))
{
    @Html.Hidden("RolId");
    <div class="row">
        <div class="col-12">
            <ul class="list-group">
                @foreach (var item in Model.Where(x => x.PrivNivelOrden.Equals("0")))
                {
                    var childrens = Model.Where(x => x.PrivId.StartsWith(item.PrivId + "_") && x.PrivNivelOrden.Equals("1"));

                    if (childrens.Count() > 0)
                    {
                        <li class="list-group-item" id="list-@item.PrivId">
                            <label>@(position + 1).-</label>
                            @Html.HiddenFor(model => model[position].PrivId)
                            @Html.CheckBoxFor(model => model[position].Selected, new { onclick = $"checkAll(this, '#collapse-{item.PrivId}');" })
                            <span>@item.PrivNombre</span> <button class="btn btn-enterprise btn-sm float-right shadow" type="button" data-toggle="collapse" data-target="#collapse-@item.PrivId"><i class="fa fa-chevron-circle-down"></i></button>
                            <div class="collapse" id="collapse-@item.PrivId">
                                <ul class="list-group mt-3">
                                    @foreach (var child in childrens)
                                    {
                                        position++;
                                        var subchildrens = Model.Where(x => x.PrivId.StartsWith(child.PrivId + "_") && x.PrivNivelOrden.Equals("2"));

                                        if (subchildrens.Count() > 0)
                                        {
                                            <li class="list-group-item" id="list-@child.PrivId">
                                                <label>@(position + 1).-</label>
                                                @Html.HiddenFor(model => model[position].PrivId)
                                                @Html.CheckBoxFor(model => model[position].Selected, new { onclick = $"checkParent(this, '#list-{item.PrivId}', '#collapse-{child.PrivId}')" })
                                                <span>@child.PrivNombre</span> <button class="btn btn-enterprise btn-sm float-right shadow" type="button" data-toggle="collapse" data-target="#collapse-@child.PrivId"><i class="fa fa-chevron-circle-down"></i></button>
                                                <div class="collapse" id="collapse-@child.PrivId">
                                                    <ul class="list-group mt-3">
                                                        @foreach (var subchild in subchildrens)
                                                        {
                                                            position++;
                                                            
                                                            <li class="list-group-item">
                                                                <label>@(position + 1).-</label>
                                                                @Html.HiddenFor(model => model[position].PrivId)
                                                                @Html.CheckBoxFor(model => model[position].Selected, new { onclick = $"checkSubParent(this, '#list-{child.PrivId}', '#collapse-{child.PrivId}')" })
                                                                <span>@subchild.PrivNombre</span>
                                                            </li>
                                                        }
                                                    </ul>
                                                </div>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="list-group-item">
                                                <label>@(position + 1).-</label>
                                                @Html.HiddenFor(model => model[position].PrivId)
                                                @Html.CheckBoxFor(model => model[position].Selected, new { onclick = $"checkParent(this, '#list-{item.PrivId}', '#collapse-{item.PrivId}')" })
                                                <span>@child.PrivNombre</span>
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                        </li>

                        position++;
                    }
                    else
                    {
                        <li class="list-group-item">
                            <label>@(position + 1).-</label>
                            @Html.HiddenFor(model => model[position].PrivId)
                            @Html.CheckBoxFor(model => model[position].Selected)
                            <span>@item.PrivNombre</span>
                        </li>

                        position++;
                    }
                }
            </ul>
        </div>
    </div>

    <div class="mt-3 text-center">
        <button class="btn btn-success mb-3"><i class="fa fa-save"></i> Guardar</button>
    </div>
}

<script type="text/javascript">
    function checkAll(control, childSelector) {
        $(control).closest('div').find(childSelector + ' input[type=checkbox]').prop('checked', $(control).is(':checked'));
    }

    function checkParent(control, parentSelector, subChildSelector) {
        if (parentSelector.includes('MODV'))
            return;
        $(control).closest('div').closest(parentSelector).find('input[type=checkbox]')[0].checked = $(control).closest('div').find('input[type=checkbox]:checked').length > 0;
        $(control).closest('div').find(subChildSelector + ' input[type=checkbox]').prop('checked', $(control).is(':checked'));
    }

    function checkSubParent(control, subParentSelector) {
        //$(control).closest('div').closest(subParentSelector).find('input[type=checkbox]')[0].checked = $(control).closest('div').find('input[type=checkbox]:checked').length > 0;
    }
</script>